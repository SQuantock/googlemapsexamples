<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>google maps basic reference</title>
	<style type="text/css">#map { width: 600px; height: 600px; border: 10px solid #000; border-radius: 9px; box-shadow: 10px 8px 5px #888888; float: left;} 
	  #info { float: left; margin: 30px;}
	  #detailDiv4 { height: 400px; width: 400px; clear: both;}
      .underline1 { text-decoration:underline; }
	  #widthsetter { width: 250px; }
	  #infow1 { width: 350px; background-color: #F1F1F1; margin: 0px; border: 3px solid #000; }  #infow1 h2 { margin-top: 0; } #infow1 img { float: left; margin-right: 10px; }
      .bubbletext { color: #FFFFFF; } .bubbletext1 { color: #00FF00; }
	  .labels {
     color: #000000;
     background-color: #F1F1F1;
     font-family: "Arial", sans-serif;
     font-size: 10px;
     font-weight: bold;
     text-align: center;
     width: 100px;   
     height: 105px;	 
     border: 2px solid black;
     border-radius: 9px;
   }

    </style>
	
	<script src="jquery-1.7.2.min.js"></script>
	<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?v=3&sensor=false"></script>
	<script src="markerwithlabel_packed.js" type="text/javascript"></script>
    <script src="infobubble-compiled.js" type="text/javascript"></script>
	<script type="text/javascript" src="markermanager_packed.js"></script>
	<script type="text/javascript">
	
	(function() {
window.onload = function() {
  var mapDiv = document.getElementById("map");
  var centerlatlng = new google.maps.LatLng(40.562199,-105.15893);
  var infowindow = new google.maps.InfoWindow();
  var infowindowb = new google.maps.InfoWindow();
  var infowindowc = new google.maps.InfoWindow();
  var options = {
    center: centerlatlng,
    zoom: 14,
    mapTypeId: google.maps.MapTypeId.TERRAIN
  };
  var map = new google.maps.Map( mapDiv, options);
  
 
 
 /* this works but is the long and more inconvenient way to have click functions in infowindows, the shorter way is below
 //confusing, can't access elements with id's inside content string cause they're not created yet, so create them on the fly first
    var content = document.createElement('div');
    var a = document.createElement('a');
    a.innerHTML = 'Zoom in|';
	a.href = '#';
	var a1 = document.createElement('a');
	a1.innerHTML = 'Zoom out';
    a1.href = '#';
    
  var markupandstyleContentString = '<div id="infow1">' + 
        '<img src="webtest1.JPG" alt="" />' +
        '<h2>Style html in an infowindow</h2>' +
        '<p>Some sample text</p>' +
        '<p><a href="http://www.google.com">A sample link</a></p>' +
        '</div>';
		
		//have to write innerHTML to created div and append the link so that you can put a click event on it
		content.innerHTML = markupandstyleContentString;
		content.appendChild(a);
	    content.appendChild(a1);
			
		  a.onclick = function() {
            map.setCenter(marker1a.getPosition());      
            map.setZoom(15);
            return false;
		  };  //end link click 
		  
		  a1.onclick = function() {
            map.setCenter(marker1a.getPosition());      
            map.setZoom(10);
            return false;
		  };  //end link click 
		  
		  
		      var marker1a = new google.maps.Marker({
    position: new google.maps.LatLng(40.567024,-105.078049),
    map: map,
    title:"with html info window"
});

		  
    google.maps.event.addListener( marker1a, 'click', function() {
    infowindow.setContent(content);
    infowindow.open(map, marker1a);
  });
  
*/


  //unless you have the zoom in and out links on every info window named infowindow it will throw an error, so infowindowb is 2nd type of infowindow here with zoom
    var marker1a = new google.maps.Marker({
    position: new google.maps.LatLng(40.567024,-105.078049),
    map: map,
    title:"with html info window"
});


  var markupandstyleContentString = '<div id="infow1">' + 
        '<img src="webtest1.JPG" alt="" />' +
        '<h2>Style html in an infowindow</h2>' +
        '<p>Some sample text</p>' +
        '<p><a href="http://www.google.com">A sample link</a></p>' + '<a href="#" id="zoomin">zoom in</a>' + '|' + '<a href="#" id="zoomout">zoom out</a>' +
        '</div>';
		
		    google.maps.event.addListener( marker1a, 'click', function() {
    infowindowb.setContent(markupandstyleContentString);
    infowindowb.open(map, marker1a);
  });
  
  
  //this listens to see if the infowindow is domready, so then the id's will be available to put click events on
  google.maps.event.addListener(infowindowb, 'domready', function() {
	  document.getElementById("zoomin").onclick = function() {
            map.setCenter(marker1a.getPosition());      
            map.setZoom(15);
            return false;
  }  //end onclick
  
  	  document.getElementById("zoomout").onclick = function() {
            map.setCenter(marker1a.getPosition());      
            map.setZoom(10);
            return false;
  }  //end onclick
});  //end domready
  
 

  
  
    //this is using the utility infoBubble, it allows advanced styling and tabs
  
		 var tabcontent = '<p>tab content!!! This might make the info window automatically in bounds act sporadically but tabs are an option with this</p>';
  
          infoBubble = new InfoBubble({
          map: map,  //this may be unnecesary, seeing if it fixes window in bounds problem
          //content: '<div class="bubbletext">Some label</div>',
		  maxWidth: 400,
		  minWidth: 300,
		  minHeight: 300,
		  maxHeight: 400,
          position: new google.maps.LatLng(-35, 151),
          //shadowStyle: 1,
          padding: 10,
		  //color: '#00ff00',
          backgroundColor: '#989898',
          borderRadius: 10,
          borderWidth: 10,
          borderColor: '#2c2c2c',
          //hideCloseButton: true,
		  arrowSize: 22,
		  arrowPosition: 22,
          arrowStyle: 0
        });
		

		
    var infobubblestyledContentString = 
	    '<div class="bubbletext">' +
        '<h2 class="bubbletext1">' + 'Styled infowindow using infobubble utility' + '</h2>' +
        '<p>Some sample text bbbbbbbbb bbbbbbbbbbbbbb bbbbbbbbbbbbbbbbb bbbbbbbbbbb bbbbbbbbbbbbb</p>' +
		'</div>';
		
		//this as well as other settings seem to make the infowindow fit on map on click to be sporadic
		infoBubble.addTab('1st tab', infobubblestyledContentString);
        infoBubble.addTab('2nd Tab!!!', tabcontent);
  
    var marker1b = new google.maps.Marker({
    position: new google.maps.LatLng(40.596749,-105.076675),
    map: map,
    title:"styled info window"
});
  
  
    google.maps.event.addListener( marker1b, 'click', function() {
    infoBubble.setContent(infobubblestyledContentString);
    infoBubble.open(map, marker1b);
  });
  
  
  
  
  
  
  var marker1 = new google.maps.Marker({
    position: new google.maps.LatLng(40.558678,-105.158386),
    map: map,
    title:"with info window"
});

var contentString1 = '<h2>H2 inside an info window</h2>';

//note, it is better to use 1 infowindow and set the content string for each marker, not make a seperate one 
//for each marker like is done below, although this does allow you to have multiple infowindows open at once
var infowindow1 = new google.maps.InfoWindow({
    content: contentString1
});

google.maps.event.addListener(marker1, 'click', function() {
  infowindow1.open(map,marker1);
});

  var marker2 = new google.maps.Marker({
    position: new google.maps.LatLng(40.5472,-105.154266),
    map: map,
    title:"second info window"
});

var contentString2 = '<h2>H2 inside the second info window</h2>';

var infowindow2 = new google.maps.InfoWindow({
    content: contentString2
});

google.maps.event.addListener(marker2, 'click', function() {
  infowindow2.open(map,marker2);
});

  var marker3 = new google.maps.Marker({
    position: new google.maps.LatLng(40.025511,-105.272369),
    map: map,
    title:"different style marker and panTo",
	icon : "http://google.com/mapfiles/ms/micons/blue-pushpin.png "
});

google.maps.event.addListener(marker3, 'click', function() {
  map.panTo(new google.maps.LatLng(40.025511,-105.272369));
});

  var marker4 = new google.maps.Marker({
    position: new google.maps.LatLng(39.998854,-105.282884),
    map: map,
    title:"trail style marker",
	icon : "http://google.com/mapfiles/ms/micons/hiker.png "
});

//putting linked icons in a variable in a js file that links to everypage would be an easy way to change a broken link
//a simple workaround for the image being too big at a lower zoom would be to use marker manager and have a smaller image for bigger zoom levels
  var mimage =  "webtest1.JPG";
  
   var marker5 = new google.maps.Marker({
    position: new google.maps.LatLng(40.037275,-105.243616),
    map: map,
    title:"local image as marker",
	icon : mimage
}); 

//this creates a marker with a label, it uses the Marker with Label utility, it's linked at top
var markerlabelpoint = new google.maps.LatLng(40.007106,-105.243874);

     var markerlabel1 = new MarkerWithLabel({
       position: markerlabelpoint,
       draggable: true,
       raiseOnDrag: true,
       map: map,
       labelContent: '<img src="webtest1.JPG" alt="image as label" />' + '<div>image as label</div>',  //"I'm a draggable marker with label!",
       labelAnchor: new google.maps.Point(22, 0),
       labelClass: "labels", // the CSS class for the label
       labelStyle: {opacity: 0.75}
     });
	 
	 var label1ContentString = '<h2>INSIDE THE LABEL!</H2>';

		    google.maps.event.addListener( markerlabel1, 'click', function() {
    infowindow.setContent(label1ContentString);
    infowindow.open(map, markerlabel1);
  });
  
  
  
  //----------------------------------------
  
  
  //this creates a detail map inside an infowindow, this is working well. 
  //in the book example there were all sorts of bugs but this is simpler and works better
  //if bugs are encountered check out the book example, it fixed bugs but had to have infowindow open at the start
  
  //the options are zoomed in to show a grey area on a roadmap because this detail map still shows up in the upper left while loading
    var options1 = {
    center: new google.maps.LatLng(40.564045,-105.164115),
    zoom: 20,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  };
  
   var markerDetail = new google.maps.Marker({
    position: new google.maps.LatLng(40.569502,-105.160961),
    map: map,
    title:"detail map",
});

   var markerDetail2 = new google.maps.Marker({
    position: new google.maps.LatLng(40.581237,-105.171947),
    map: map,
    title:"detail map",
});

var detailDiv = document.createElement('div');    
detailDiv.style.width = '200px';
detailDiv.style.height = '200px';

//this makes it so detail map doesn't show while loading, maybe overkill,
//have to reverse on every marker, could trigger click specific marker right away, hopefully no bugs,
//it might make it slightly slower, i don't know, might just leave it out, it does seem to have bugs
//detailDiv.style.display = 'none';  

document.getElementById('map').appendChild(detailDiv);  //this line necesary to make it work correctly

var map2 = new google.maps.Map( detailDiv, options1);



		    google.maps.event.addListener( markerDetail, 'click', function() {
//detailDiv.style.display = '';  //this makes it so detail map doesn't show while loading, maybe overkill, have to put on every marker
			    map2.setOptions( {
      center : markerDetail.getPosition(),
      zoom : 15,
      mapTypeId : google.maps.MapTypeId.SATELLITE
    });
    infowindow.setContent(detailDiv);
    infowindow.open(map, markerDetail);
	
	//this is to have a marker in the detail map, probably unnecesary most of the time
	   var markerDetailmini = new google.maps.Marker({
    position: new google.maps.LatLng(40.569502,-105.160961),
    map: map2,
    title:"detail map",
});
  });
  
  		    google.maps.event.addListener( markerDetail2, 'click', function() {
			    map2.setOptions( {
      center : markerDetail2.getPosition(),
      zoom : 15,
      mapTypeId : google.maps.MapTypeId.SATELLITE
    });
    infowindow.setContent(detailDiv);
    infowindow.open(map, markerDetail2);
  });

//-----------------------------------------

//this shows streetview in an infowindow, it uses similar functionality to the above detail map

   var markerDetail3 = new google.maps.Marker({
    position: new google.maps.LatLng(40.567676,-105.155125),
    map: map,
    title:"streetview in infowindow",
});

var detailDiv3 = document.createElement('div');    
detailDiv3.style.width = '400px';
detailDiv3.style.height = '400px';
document.getElementById('map').appendChild(detailDiv3);  //this line necesary to make it work correctly

    var panoramaOptions = {
  position: new google.maps.LatLng(40.567676,-105.155125),
  pov: {
    heading: 162,
    pitch: -5,
	//zoom: 3   //this works, it does this for EVERY streetview though, you can set it for each click though, it reverts to this setting though, no mention you can set it here in the docs though
  },
  addressControl: false,    //these all disable controls, there are more options
  linksControl: false,
  clickToGo: false
};


google.maps.event.addListener(infowindowc, 'domready', function() {
  		    google.maps.event.addListener( markerDetail3, 'click', function() {
			var panorama = new  google.maps.StreetViewPanorama(document.getElementById("detailDiv3"), panoramaOptions );
//map.setStreetView(panorama);

    infowindowc.setContent(detailDiv3);
    infowindowc.open(map, markerDetail3);
  });
}



//-----------------------------

  document.getElementById("fortcollins").onclick = function() {
    map.setOptions( {
      center : new google.maps.LatLng( 40.618513,-105.055933 ),
      zoom : 10,
      mapTypeId : google.maps.MapTypeId.TERRAIN
    });
  }  //end onclick
  
    document.getElementById("boulder").onclick = function() {
    map.setOptions( {
      center : new google.maps.LatLng( 40.011313,-105.270167  ),
      zoom : 13,
      mapTypeId : google.maps.MapTypeId.SATELLITE
    });
  }  //end onclick
  
    document.getElementById("denver").onclick = function() {
    map.setOptions( {
      center : new google.maps.LatLng( 39.977515,-104.878779  ),
      zoom : 8,
      mapTypeId : google.maps.MapTypeId.ROADMAP
    });
  }  //end onclick
  
  
 
  //-----------------------------------------------------
  
  
  //this section uses marker mangager, it does the array way of adding markers but there are a few different things
  //you need to do to use marker manager
  //used the newest version of marker manager, if it is buggy there is one that works fine in the google maps book folder
  //the link, which is hard to find, is in the google maps book text file
  
  var mgr = new MarkerManager(map);
  var i, marker;
 
  
  var centerContent = '<h2>Center Marker</h2>' + '<p>This shows you can use a string in a variable for' + '<br>' + 
                      'the2nd index of the places array. This might be easier' +'<br>'+ 
					  'if their is a lot of content in the infowindow,' +'<br>'+ 
					  'so the array is easier to read</p>';
	
  var centerContent2 = '<div id="widthsetter">Notice that this text only goes a certain length and you do not have to put all those break tags in, ' + 
                        'you can just keep typing and it will wrap. it is done by setting a width on the div around this text.';

  var places = [
    [ "NW", new google.maps.LatLng(40.92804,-104.051514), "This is NW" ],
    [ "NE", new google.maps.LatLng(40.909361,-103.672485), "This is NE" ],
    [ "SW", new google.maps.LatLng(40.680638,-104.040527), "This is SW" ],
    [ "SE", new google.maps.LatLng(40.684804,-103.686218), "This is SE" ],
	[ "Center", new google.maps.LatLng(40.820045,-103.944397), centerContent ],
	[ "Center2", new google.maps.LatLng(40.817967,-103.779602), centerContent2 ]
  ];
  
  var markerholder = [];  //this line is just if using marker manager

  
  //there is closure stuff happening in the event listener part, it has to do with accessing variables values
    for ( var i = 0; i < places.length; i++ ) {

      var marker = new google.maps.Marker( {
        position : places[i][1],
        map : map,
        title : places[i][0]
      });
	
	  (function( i, marker ) {  //start self executing function
        google.maps.event.addListener( marker, "click", function() {
          infowindow.setContent( places[i][2] );
          infowindow.open(map, marker);
        });  //end add listener
      })( i, marker );  //end self executing function
	  
	   	markerholder.push( marker);  //this line is just if using marker manager, it makes an array to give to marker manager
	}  //end for loop
  
    //marker manager will not work without this for loop, i think because the previous for loop creates the markers so they appear
	//so this gets rid of them, and then marker manager just uses the marker holder array
    for ( var i = 0; i < markerholder.length; i++ ) {
	markerholder[i].setMap(null);
	}
  
    //this is the big overview marker
      var grasslands = new google.maps.Marker({
      position: new google.maps.LatLng(40.784701,-103.842773),
      icon: 'cluster.png'
    });
	
	/* this also works, because they are not executed i think
	var temp1 = [
	new google.maps.Marker({ position: new google.maps.LatLng(40.92804,-104.051514) }),
	new google.maps.Marker({ position: new google.maps.LatLng(40.909361,-103.672485) })
	];
	*/
	
	  //var grassland1 = [ grasslands ];    //would use something like this to add multiple overview markers
  
      google.maps.event.addListener(grasslands, 'click', function() {
	    map.setOptions( {
          center : grasslands.getPosition(),
          zoom : 10,
		  mapTypeId : google.maps.MapTypeId.TERRAIN
        });
      
      //map.setZoom(7);  //alternate way to set zoom
      //map.setCenter(grasslands.getPosition());  //alternate way to set center
      
    });  // end click
  
      google.maps.event.addListener(mgr, 'loaded', function() {
        // These markers will only be visible between zoom level 1 and 9
        mgr.addMarker(grasslands, 1, 9);
		
        // These markers will be visible at zoom level 10 and higher
        mgr.addMarkers(markerholder, 10);
      
        // Making the MarkerManager add the markers to the map
        mgr.refresh();
    });
  
  
  //--------------------------------------------------------------
  
  
  

  
  
}  //end onload
})();  //end self executing code encapsulating function
	
	</script>
	
	
	
	
	
  </head>
  
  
  <body>
  
  
  
    <div id="map"></div>
  
    <div id="info">
		<label><input type="button" value="Fort Collins" id="fortcollins" />Change map settings</label><br>
	    <label><input type="button" value="Boulder" id="boulder" /> it uses map.setOptions</label><br>
	    <label><input type="button" value="Denver" id="denver" />and changes it on click</label><br><br>
	  <br>
	  <br>
	<p>
	  <span class="underline1">On this page</span>:
	  <ul>
	  <li>changed map options on button click</li>
	  <li>made multiple markers with info windows that stay open for each marker</li>
	  <li>the way it was done create seperate markers, infowindows and click events seems<br>
	  really inefficient and should probably done with arrays and self executing functions,<br>
	  which i will try on a different page</li>
	  </ul>
    </p>
	</div>
	<div id="detailDiv4"></div>
  
  </body>
</html>