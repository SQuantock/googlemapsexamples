<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>google maps basic reference</title>
	<style type="text/css">#map { width: 600px; height: 600px; border: 10px solid #000; border-radius: 9px; box-shadow: 10px 8px 5px #888888; float: left;} 
	  #info { float: left; margin: 30px;}
      .underline1 { text-decoration:underline; }
	  #infow1 { width: 350px; background-color: #F1F1F1; margin: 0px; border: 3px solid #000; }  #infow1 h2 { margin-top: 0; } #infow1 img { float: left; margin-right: 10px; }
      .bubbletext { color: #FFFFFF; } .bubbletext1 { color: #00FF00; }
	  .labels {
     color: #000000;
     background-color: #F1F1F1;
     font-family: "Arial", sans-serif;
     font-size: 10px;
     font-weight: bold;
     text-align: center;
     width: 100px;   
     height: 105px;	 
     border: 2px solid black;
     border-radius: 9px;
   }

    </style>
	
	<script src="jquery-1.7.2.min.js"></script>
	<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?v=3&sensor=false"></script>
	<script src="markerwithlabel_packed.js" type="text/javascript"></script>
    <script src="infobubble-compiled.js" type="text/javascript"></script>
	<script type="text/javascript">
	
	(function() {
window.onload = function() {
  var mapDiv = document.getElementById("map");
  var centerlatlng = new google.maps.LatLng(40.562199,-105.15893);
  var infowindow = new google.maps.InfoWindow();
  var infowindowb = new google.maps.InfoWindow();
  var options = {
    center: centerlatlng,
    zoom: 14,
    mapTypeId: google.maps.MapTypeId.TERRAIN
  };
  var map = new google.maps.Map( mapDiv, options);
  
 
 
 /* this works but is the long and more inconvenient way to have click functions in infowindows, the shorter way is below
 //confusing, can't access elements with id's inside content string cause they're not created yet, so create them on the fly first
    var content = document.createElement('div');
    var a = document.createElement('a');
    a.innerHTML = 'Zoom in|';
	a.href = '#';
	var a1 = document.createElement('a');
	a1.innerHTML = 'Zoom out';
    a1.href = '#';
    
  var markupandstyleContentString = '<div id="infow1">' + 
        '<img src="webtest1.JPG" alt="" />' +
        '<h2>Style html in an infowindow</h2>' +
        '<p>Some sample text</p>' +
        '<p><a href="http://www.google.com">A sample link</a></p>' +
        '</div>';
		
		//have to write innerHTML to created div and append the link so that you can put a click event on it
		content.innerHTML = markupandstyleContentString;
		content.appendChild(a);
	    content.appendChild(a1);
			
		  a.onclick = function() {
            map.setCenter(marker1a.getPosition());      
            map.setZoom(15);
            return false;
		  };  //end link click 
		  
		  a1.onclick = function() {
            map.setCenter(marker1a.getPosition());      
            map.setZoom(10);
            return false;
		  };  //end link click 
		  
		  
		      var marker1a = new google.maps.Marker({
    position: new google.maps.LatLng(40.567024,-105.078049),
    map: map,
    title:"with html info window"
});

		  
    google.maps.event.addListener( marker1a, 'click', function() {
    infowindow.setContent(content);
    infowindow.open(map, marker1a);
  });
  
*/


  //unless you have the zoom in and out links on every info window named infowindow it will throw an error, so infowindowb is 2nd type of infowindow here with zoom
    var marker1a = new google.maps.Marker({
    position: new google.maps.LatLng(40.567024,-105.078049),
    map: map,
    title:"with html info window"
});


  var markupandstyleContentString = '<div id="infow1">' + 
        '<img src="webtest1.JPG" alt="" />' +
        '<h2>Style html in an infowindow</h2>' +
        '<p>Some sample text</p>' +
        '<p><a href="http://www.google.com">A sample link</a></p>' + '<a href="#" id="zoomin">zoom in</a>' + '|' + '<a href="#" id="zoomout">zoom out</a>' +
        '</div>';
		
		    google.maps.event.addListener( marker1a, 'click', function() {
    infowindowb.setContent(markupandstyleContentString);
    infowindowb.open(map, marker1a);
  });
  
  
  //this listens to see if the infowindow is domready, so then the id's will be available to put click events on
  google.maps.event.addListener(infowindowb, 'domready', function() {
	  document.getElementById("zoomin").onclick = function() {
            map.setCenter(marker1a.getPosition());      
            map.setZoom(15);
            return false;
  }  //end onclick
  
  	  document.getElementById("zoomout").onclick = function() {
            map.setCenter(marker1a.getPosition());      
            map.setZoom(10);
            return false;
  }  //end onclick
});
  
 

  
  
    //this is using the utility infoBubble, it allows advanced styling and tabs
  
		 var tabcontent = '<p>tab content!!! This might make the info window automatically in bounds act sporadically but tabs are an option with this</p>';
  
          infoBubble = new InfoBubble({
          map: map,  //this may be unnecesary, seeing if it fixes window in bounds problem
          //content: '<div class="bubbletext">Some label</div>',
		  maxWidth: 400,
		  minWidth: 300,
		  minHeight: 300,
		  maxHeight: 400,
          position: new google.maps.LatLng(-35, 151),
          //shadowStyle: 1,
          padding: 10,
		  //color: '#00ff00',
          backgroundColor: '#989898',
          borderRadius: 10,
          borderWidth: 10,
          borderColor: '#2c2c2c',
          //hideCloseButton: true,
		  arrowSize: 22,
		  arrowPosition: 22,
          arrowStyle: 0
        });
		

		
    var infobubblestyledContentString = 
	    '<div class="bubbletext">' +
        '<h2 class="bubbletext1">' + 'Styled infowindow using infobubble utility' + '</h2>' +
        '<p>Some sample text bbbbbbbbb bbbbbbbbbbbbbb bbbbbbbbbbbbbbbbb bbbbbbbbbbb bbbbbbbbbbbbb</p>' +
		'</div>';
		
		//this as well as other settings seem to make the infowindow fit on map on click to be sporadic
		infoBubble.addTab('1st tab', infobubblestyledContentString);
        infoBubble.addTab('2nd Tab!!!', tabcontent);
  
    var marker1b = new google.maps.Marker({
    position: new google.maps.LatLng(40.596749,-105.076675),
    map: map,
    title:"styled info window"
});
  
  
    google.maps.event.addListener( marker1b, 'click', function() {
    infoBubble.setContent(infobubblestyledContentString);
    infoBubble.open(map, marker1b);
  });
  
  
  
  
  
  
  var marker1 = new google.maps.Marker({
    position: new google.maps.LatLng(40.558678,-105.158386),
    map: map,
    title:"with info window"
});

var contentString1 = '<h2>H2 inside an info window</h2>';

//note, it is better to use 1 infowindow and set the content string for each marker, not make a seperate one 
//for each marker like is done below
var infowindow1 = new google.maps.InfoWindow({
    content: contentString1
});

google.maps.event.addListener(marker1, 'click', function() {
  infowindow1.open(map,marker1);
});

  var marker2 = new google.maps.Marker({
    position: new google.maps.LatLng(40.5472,-105.154266),
    map: map,
    title:"second info window"
});

var contentString2 = '<h2>H2 inside the second info window</h2>';

var infowindow2 = new google.maps.InfoWindow({
    content: contentString2
});

google.maps.event.addListener(marker2, 'click', function() {
  infowindow2.open(map,marker2);
});

  var marker3 = new google.maps.Marker({
    position: new google.maps.LatLng(40.025511,-105.272369),
    map: map,
    title:"different style marker",
	icon : "http://google.com/mapfiles/ms/micons/blue-pushpin.png "
});

  var marker4 = new google.maps.Marker({
    position: new google.maps.LatLng(39.998854,-105.282884),
    map: map,
    title:"trail style marker",
	icon : "http://google.com/mapfiles/ms/micons/hiker.png "
});

//putting linked icons in a variable in a js file that links to everypage would be an easy way to change a broken link
  var mimage =  "webtest1.JPG";
  
   var marker5 = new google.maps.Marker({
    position: new google.maps.LatLng(40.037275,-105.243616),
    map: map,
    title:"local image as marker",
	icon : mimage
}); 

//this creates a marker with a label, it uses the Marker with Label utility, it's linked at top
var markerlabelpoint = new google.maps.LatLng(40.007106,-105.243874);

     var markerlabel1 = new MarkerWithLabel({
       position: markerlabelpoint,
       draggable: true,
       raiseOnDrag: true,
       map: map,
       labelContent: '<img src="webtest1.JPG" alt="image as label" />' + '<div>image as label</div>',  //"I'm a draggable marker with label!",
       labelAnchor: new google.maps.Point(22, 0),
       labelClass: "labels", // the CSS class for the label
       labelStyle: {opacity: 0.75}
     });
	 
	 var label1ContentString = '<h2>INSIDE THE LABEL!</H2>';

		    google.maps.event.addListener( markerlabel1, 'click', function() {
    infowindow.setContent(label1ContentString);
    infowindow.open(map, markerlabel1);
  });
  
  
  
  //----------------------------------------
  
  
  //this creates a detail map inside an infowindow
  
   var markerDetail = new google.maps.Marker({
    position: new google.maps.LatLng(40.569502,-105.160961),
    map: map,
    title:"detail map",
});

var detailDiv = document.createElement('div');    
detailDiv.style.width = '200px';
detailDiv.style.height = '200px';

var map2 = new google.maps.Map( detailDiv, options);

		    google.maps.event.addListener( markerDetail, 'click', function() {
			    map2.setOptions( {
      center : markerDetail.getPosition();,
      zoom : 15,
      mapTypeId : google.maps.MapTypeId.SATELLITE
    });
    infowindow.setContent(detailDiv);
    infowindow.open(map, markerDetail);
  });

//-----------------------------------------




  document.getElementById("fortcollins").onclick = function() {
    map.setOptions( {
      center : new google.maps.LatLng( 40.618513,-105.055933 ),
      zoom : 10,
      mapTypeId : google.maps.MapTypeId.TERRAIN
    });
  }  //end onclick
  
    document.getElementById("boulder").onclick = function() {
    map.setOptions( {
      center : new google.maps.LatLng( 40.011313,-105.270167  ),
      zoom : 13,
      mapTypeId : google.maps.MapTypeId.SATELLITE
    });
  }  //end onclick
  
    document.getElementById("denver").onclick = function() {
    map.setOptions( {
      center : new google.maps.LatLng( 39.684468,-104.891138  ),
      zoom : 8,
      mapTypeId : google.maps.MapTypeId.ROADMAP
    });
  }  //end onclick
  

  
  
}  //end onload
})();  //end self executing code encapsulating function
	
	</script>
	
	
	
	
	
  </head>
  
  
  <body>
  
  
  
    <div id="map"></div>
  
    <div id="info">
		<label><input type="button" value="Fort Collins" id="fortcollins" />Change map settings</label><br>
	    <label><input type="button" value="Boulder" id="boulder" /> it uses map.setOptions</label><br>
	    <label><input type="button" value="Denver" id="denver" />and changes it on click</label><br><br>
	  <br>
	  <br>
	<p>
	  <span class="underline1">On this page</span>:
	  <ul>
	  <li>changed map options on button click</li>
	  <li>made multiple markers with info windows that stay open for each marker</li>
	  <li>the way it was done create seperate markers, infowindows and click events seems<br>
	  really inefficient and should probably done with arrays and self executing functions,<br>
	  which i will try on a different page</li>
	  </ul>
    </p>
	</div>
  
  </body>
</html>