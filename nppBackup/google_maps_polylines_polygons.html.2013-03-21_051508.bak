<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>google maps polylines and polygons</title>
	<style type="text/css">#map { width: 600px; height: 600px; border: 10px solid #000; border-radius: 9px; box-shadow: 10px 8px 5px #888888; float: left;} 
	  #info { float: left; margin: 30px;}
      .underline1 { text-decoration:underline; }
	  #infow1 { width: 350px; background-color: #F1F1F1; margin: 0px; border: 3px solid #000; }  #infow1 h2 { margin-top: 0; } #infow1 img { float: left; margin-right: 10px; }
      .bubbletext { color: #FFFFFF; } .bubbletext1 { color: #00FF00; }
    </style>

	<script src="jquery-1.7.2.min.js"></script>
	<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?v=3&sensor=false"></script>
    <script src="infobubble-compiled.js" type="text/javascript"></script>
	<script type="text/javascript">
	
	(function() {
window.onload = function() {
  var mapDiv = document.getElementById("map");
  var centerlatlng = new google.maps.LatLng(39.720788,-104.987068);
  var infowindow = new google.maps.InfoWindow();
  var infowindowb = new google.maps.InfoWindow();
  var options = {
    center: centerlatlng,
    zoom: 13,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  };
  var map = new google.maps.Map( mapDiv, options);

  
  
  //if you put create polygons on button click it keeps layering on layers on each button click
      document.getElementById("denvern1").onclick = function() {
    map.setOptions( {
      center : new google.maps.LatLng( 39.720788,-104.987068 ),
      zoom : 13,
      mapTypeId : google.maps.MapTypeId.ROADMAP
    });
}  //end onclick


  
  	      var capitalHillPoints = [
new google.maps.LatLng(39.740062,-104.987369),
new google.maps.LatLng(39.739963,-104.972992),
new google.maps.LatLng(39.727191,-104.972949),
new google.maps.LatLng(39.727257,-104.987454)	    
    ];
	
    // Creating the polygon
    var capitalHill = new google.maps.Polygon({
      paths: capitalHillPoints,
      map: map,
      strokeColor: '#ff0000',
      strokeOpacity: 0.6,
      strokeWeight: 1,
      fillColor: '#ff0000',
      fillOpacity: 0.35
    });
  
  
    	      var congressParkPoints = [
new google.maps.LatLng(39.740128,-104.940677),
new google.maps.LatLng(39.725574,-104.94072),
new google.maps.LatLng(39.725574,-104.960203),
new google.maps.LatLng(39.730492,-104.96016),
new google.maps.LatLng(39.730888,-104.959774)
	    
    ];
	
    // Creating the polygon
    var congressPark = new google.maps.Polygon({
      paths: congressParkPoints,
      map: map,
      strokeColor: '#ff0000',
      strokeOpacity: 0.6,
      strokeWeight: 1,
      fillColor: '#ff0000',
      fillOpacity: 0.35
    });
  
  
      	      var bakerPoints = [
new google.maps.LatLng(39.725409,-105.013161),
new google.maps.LatLng(39.725277,-104.987583),
new google.maps.LatLng(39.696093,-104.987411),
new google.maps.LatLng(39.696357,-104.993248),
new google.maps.LatLng(39.69847,-104.992905),
new google.maps.LatLng(39.7023,-104.99548),
new google.maps.LatLng(39.706526,-104.998226),
new google.maps.LatLng(39.711677,-105.000458),
new google.maps.LatLng(39.715374,-105.002689),
new google.maps.LatLng(39.719335,-105.007496),
new google.maps.LatLng(39.722108,-105.010586),
new google.maps.LatLng(39.724353,-105.012989)
	    
    ];
	
    // Creating the polygon
    var baker = new google.maps.Polygon({
      paths: bakerPoints,
      map: map,
      strokeColor: '#ff0000',
      strokeOpacity: 0.6,
      strokeWeight: 1,
      fillColor: '#ff0000',
      fillOpacity: 0.35
    });
	
	//this makes a label for rollover
	        infoLabel1 = new InfoBubble({
          map: map,
          content: '<div class="bubbletext">Capital Hill</div>',
          position: new google.maps.LatLng(39.733066,-104.980373),
		  //maxWidth: 400,
		  minWidth: 75,
		  minHeight: 25,
		  maxHeight: 25,
          shadowStyle: 0,
          padding: 5,
          backgroundColor: '#898989',
          borderRadius: 10,
          arrowSize: 0,
          borderWidth: 1,
          borderColor: '#2c2c2c',
          disableAutoPan: true,
          hideCloseButton: true,
          //arrowPosition: 30,
          //backgroundClassName: 'phoney',
          //arrowStyle: 2
        });

		
		  google.maps.event.addListener( capitalHill, 'mouseover', function() { infoLabel1.open(map); });
          google.maps.event.addListener( capitalHill, 'mouseout', function() { infoLabel1.close(map); });

  
  var polygonStateHolder = null;
  
  var bakerCenter = new google.maps.LatLng(39.714714,-104.994278);
  var congressCenter = new google.maps.LatLng(39.73069,-104.947414);
  var bakerContentString = "<h2>Baker</h2>" + "<p>" + "This is a just a very quick" + "<br>" + "and innacurate neighborhood boundary" + "</p>";
  var congressContentString = "<h2>Congress Park</h2>" + "<p>" + "This highlights and" + "<br>" + "shows an infowindow on button click" + "</p>";
  
  google.maps.event.addListener( baker, 'click', function() {
    infowindow.setContent(bakerContentString);
	infowindow.setPosition(bakerCenter);
    infowindow.open(map);
  });
  
       document.getElementById("capitalHill").onclick = function() {
	             if ( polygonStateHolder )
                    polygonStateHolder.setOptions({
                      fillColor: '#FF0000',
                      strokeColor: '#ff0000'
                    });
                capitalHill..setOptions({
                      fillColor: '#00FF00',
                      strokeColor: '#ff0000'
                    });
                polygonStateHolder = capitalHill;
            });
        capitalHill.setOptions({
        fillColor: '#00FF00',
        strokeColor: '#ff0000'
      });
  }  //end onclick
  
       document.getElementById("congressPark").onclick = function() {
	    congressPark.setOptions({
        fillColor: '#00FF00',
        strokeColor: '#ff0000'
         });
         infowindow.setContent(congressContentString);
	     infowindow.setPosition(congressCenter);
         infowindow.open(map);
  }  //end onclick
  
  
  //-----------------------------polyline
  
    var someroutecoords = [
new google.maps.LatLng(39.703373,-104.972252),
new google.maps.LatLng(39.703877,-104.972992),
new google.maps.LatLng(39.704677,-104.973142),
new google.maps.LatLng(39.705775,-104.97311),
new google.maps.LatLng(39.706444,-104.972906),
new google.maps.LatLng(39.707129,-104.972402),
new google.maps.LatLng(39.707517,-104.972434),
new google.maps.LatLng(39.707517,-104.9687),
new google.maps.LatLng(39.705734,-104.968679),
new google.maps.LatLng(39.705684,-104.965181),
new google.maps.LatLng(39.705668,-104.96177),
new google.maps.LatLng(39.711099,-104.961727)
  ];
  var someroute = new google.maps.Polyline({
    path: someroutecoords,
    strokeColor: "#FF0000",
    strokeOpacity: 1.0,
    strokeWeight: 2
  });

  someroute.setMap(map);

  
  
  $("#route1").toggle(function(){
  someroute.setVisible(false);},
  function(){
  someroute.setVisible(true);}
);
  
  
  
  
  
  
  
  
  //--------------------------------
    var lineCoordinates = [
    new google.maps.LatLng(39.741514,-104.987411),
    new google.maps.LatLng(39.753129,-105.002646)
  ];

  var lineSymbol = {
    path: google.maps.SymbolPath.CIRCLE,
    scale: 8,
    strokeColor: '#393'
  };

  line = new google.maps.Polyline({
    path: lineCoordinates,
    icons: [{
      icon: lineSymbol,
      offset: '0%'
    }],
    map: map
  });

  /*this way does some magic of resetting to 0
function animateCircle() {
    var count = 0;
    offsetId = window.setInterval(function() {
      count = (count + 1) % 200;

      var icons = line.get('icons');
      icons[0].offset = (count / 2) + '%';
      line.set('icons', icons);
  }, 20);
}
*/


//right now this works pretty good, the animate line button is working as it should finally i think, hitting continue while the circle
// is moving creates bugs, probably cause count and offset become uncorrelated, might need to treat that button like the other one
//also log to make sure count isn't continually running, make a station with an icon
 var weltonContentString = '<h2>16th and Welton!</h2>';
 var weltonCenter = new google.maps.LatLng(39.74455,-104.991317);
 var stopPositionHolder = 0;
 var offsetId;
 
function animateCircle() {
console.log(stopPositionHolder);
    var count = stopPositionHolder;
    offsetId = window.setInterval(function() {
      count = (count + .5);
      var icons = line.get('icons');
      icons[0].offset = (count) + '%';
	  if ( icons[0].offset == "28%" ) {    
	    infowindow.setContent(weltonContentString);
	    infowindow.setPosition(weltonCenter);
        infowindow.open(map); 
		stopPositionHolder = count;
		window.clearInterval(offsetId); 
		}
		if ( icons[0].offset == "100%" ) { alert('end of tour!'); window.clearInterval(offsetId); stopPositionHolder = 0; console.log(stopPositionHolder + "M"); 
	    }
      line.set('icons', icons);
  }, 20);
  }




       document.getElementById("circleanimate").onclick = function() { 
	             if ( offsetId != -1) { window.clearInterval(offsetId);  }
				 stopPositionHolder = 0; 
	             var icons1 = line.get('icons');
                 icons1[0].offset = (stopPositionHolder) + '%';
				 line.set('icons', icons1);
				 console.log(icons1[0].offset);  
				 animateCircle();}  //end onclick
				 

	   document.getElementById("circleanimatecont").onclick = function() { animateCircle(); }//end onclick
//------------------------------
  

  
  
}  //end onload
})();  //end self executing code encapsulating function
	
	</script>
	
	
	
	
	
  </head>
  
  
  <body>
  
  
  
    <div id="map"></div>
  
    <div id="info">
	    <label><input type="button" value="Denver" id="denver" />relic button, might still use</label><br><br>
		<label><input type="button" value="Denver Neighborhoods" id="denvern1" />relic button, might still use</label><br>
		<label><input type="button" value="Congress Park" id="congressPark" />highlight on rollover</label><br>
		<label><input type="button" value="Capitol Hill" id="capitalHill" />info and highlight on click</label><br>
		<label><input type="button" value="Some Route" id="route1" />toggle on click</label><br>
     <br>
	  <label><input type="button" value="animate line" id="circleanimate" />animate circle on click</label>
      <label><input type="button" value="continue" id="circleanimatecont" />continue trip</label><br>
	  <br>
	  <br>
	<p>
	  <span class="underline1">On this page</span>:
	  <ul>
	  <li>changed map options on button click</li>
	  <li>made multiple markers with info windows that stay open for each marker</li>
	  <li>the way it was done create seperate markers, infowindows and click events seems<br>
	  really inefficient and should probably done with arrays and self executing functions,<br>
	  which i will try on a different page</li>
	  </ul>
    </p>
	</div>
  
  </body>
</html>